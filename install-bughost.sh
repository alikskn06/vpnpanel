#!/bin/bash

# VLESS XTLS-Vision VPN Kurulum (BugHost/SNI Trick i√ßin)
# Reality YOK - SNI √∂zg√ºrl√ºƒü√º VAR!

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}"
cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë   VLESS XTLS-Vision - BugHost/SNI Trick Installer    ‚ïë
‚ïë   Reality YOK - Serbest SNI!                         ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
echo -e "${NC}"

if [[ $EUID -ne 0 ]]; then
   echo -e "${RED}Bu script root olarak √ßalƒ±≈ütƒ±rƒ±lmalƒ±!${NC}"
   exit 1
fi

echo -e "${GREEN}[1/7] Sistem g√ºncelleniyor...${NC}"
export DEBIAN_FRONTEND=noninteractive
apt update -y
apt upgrade -y

echo -e "${GREEN}[2/7] Gerekli paketler kuruluyor...${NC}"
apt install -y curl wget unzip jq ufw openssl

echo -e "${GREEN}[3/7] Sunucu bilgileri alƒ±nƒ±yor...${NC}"
echo ""
read -p "Sunucu IP adresi: " SERVER_IP
if [[ -z "$SERVER_IP" ]]; then
    echo -e "${RED}IP adresi bo≈ü bƒ±rakƒ±lamaz!${NC}"
    exit 1
fi

# IP format kontrol√º
if ! [[ $SERVER_IP =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Ge√ßersiz IP formatƒ±, devam ediliyor...${NC}"
fi

read -p "Port numarasƒ± [443]: " PORT
PORT=${PORT:-443}

# Port kontrol√º
if ! [[ $PORT =~ ^[0-9]+$ ]] || [ $PORT -lt 1 ] || [ $PORT -gt 65535 ]; then
    echo -e "${RED}Ge√ßersiz port! 1-65535 arasƒ± olmalƒ±.${NC}"
    exit 1
fi

read -p "Kullanƒ±cƒ± sayƒ±sƒ± [3]: " USER_COUNT
USER_COUNT=${USER_COUNT:-3}

# Kullanƒ±cƒ± sayƒ±sƒ± kontrol√º
if ! [[ $USER_COUNT =~ ^[0-9]+$ ]] || [ $USER_COUNT -lt 1 ]; then
    echo -e "${RED}Kullanƒ±cƒ± sayƒ±sƒ± en az 1 olmalƒ±!${NC}"
    exit 1
fi

echo -e "${GREEN}[4/8] Xray Core kuruluyor...${NC}"
if ! bash -c "$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" @ install; then
    echo -e "${RED}Xray kurulumu ba≈üarƒ±sƒ±z!${NC}"
    exit 1
fi

# Xray binary kontrol√º
if ! command -v xray &> /dev/null; then
    echo -e "${RED}Xray y√ºklenmedi!${NC}"
    exit 1
fi

echo -e "${GREEN}[5/8] Self-signed TLS sertifikasƒ± olu≈üturuluyor...${NC}"
mkdir -p /etc/xray/certs
openssl req -x509 -newkey rsa:4096 -keyout /etc/xray/certs/key.pem -out /etc/xray/certs/cert.pem -days 3650 -nodes -subj "/CN=${SERVER_IP}" 2>/dev/null

# Sertifika izinlerini ayarla
chmod 644 /etc/xray/certs/cert.pem
chmod 600 /etc/xray/certs/key.pem
echo -e "${BLUE}‚úì TLS sertifikasƒ± olu≈üturuldu${NC}"

echo -e "${GREEN}[6/8] UUID'ler olu≈üturuluyor...${NC}"
UUIDS_FILE="/tmp/xray_uuids_$$.txt"
> "$UUIDS_FILE"

for ((i=1; i<=$USER_COUNT; i++)); do
    UUID=$(xray uuid)
    if [[ -z "$UUID" ]]; then
        echo -e "${RED}UUID olu≈üturulamadƒ±!${NC}"
        rm -f "$UUIDS_FILE"
        exit 1
    fi
    echo "$UUID" >> "$UUIDS_FILE"
    echo -e "${BLUE}Kullanƒ±cƒ± $i: $UUID${NC}"
done

echo -e "${GREEN}[7/8] Xray config dosyasƒ± olu≈üturuluyor...${NC}"

CONFIG_FILE="/usr/local/etc/xray/config.json"
CONFIG_DIR=$(dirname "$CONFIG_FILE")

# Config dizini olu≈ütur
mkdir -p "$CONFIG_DIR"

# Client array olu≈ütur
CLIENTS_JSON="["
FIRST=true

while IFS= read -r UUID; do
    if [[ -z "$UUID" ]]; then
        continue
    fi
    
    if [[ "$FIRST" = false ]]; then
        CLIENTS_JSON="${CLIENTS_JSON},"
    fi
    FIRST=false
    
    CLIENTS_JSON="${CLIENTS_JSON}{\"id\":\"${UUID}\",\"flow\":\"xtls-rprx-vision\"}"
done < "$UUIDS_FILE"

CLIENTS_JSON="${CLIENTS_JSON}]"

# Config dosyasƒ± olu≈ütur (jq ile g√ºvenli)
cat > "$CONFIG_FILE" << EOF
{
  "log": {
    "loglevel": "warning",
    "access": "/var/log/xray/access.log",
    "error": "/var/log/xray/error.log"
  },
  "inbounds": [
    {
      "listen": "0.0.0.0",
      "port": ${PORT},
      "protocol": "vless",
      "settings": {
        "clients": ${CLIENTS_JSON},
        "decryption": "none"
      },
      "streamSettings": {
        "network": "tcp",
        "security": "tls",
        "tlsSettings": {
          "alpn": ["h2", "http/1.1"],
          "certificates": [
            {
              "certificateFile": "/etc/xray/certs/cert.pem",
              "keyFile": "/etc/xray/certs/key.pem"
            }
          ]
        }
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "freedom",
      "tag": "direct"
    },
    {
      "protocol": "blackhole",
      "tag": "block"
    }
  ],
  "routing": {
    "rules": [
      {
        "type": "field",
        "ip": [
          "geoip:private"
        ],
        "outboundTag": "block"
      }
    ]
  }
}
EOF

# Log dizini olu≈ütur
mkdir -p /var/log/xray
chmod 755 /var/log/xray

echo -e "${GREEN}Config dosyasƒ± test ediliyor...${NC}"
if ! xray run -test -c "$CONFIG_FILE" 2>&1 | grep -q "Configuration OK"; then
    echo -e "${RED}Config dosyasƒ± hatalƒ±!${NC}"
    xray run -test -c "$CONFIG_FILE"
    rm -f "$UUIDS_FILE"
    exit 1
fi

echo -e "${GREEN}[8/8] Firewall ayarlanƒ±yor ve Xray ba≈ülatƒ±lƒ±yor...${NC}"

# UFW kur (yoksa)
if ! command -v ufw &> /dev/null; then
    apt install -y ufw
fi

# UFW ayarla
ufw --force enable
ufw default deny incoming
ufw default allow outgoing
ufw allow ${PORT}/tcp
ufw allow 22/tcp
ufw --force reload

# Xray servis dosyasƒ±nƒ± root kullanƒ±cƒ±sƒ± i√ßin yeniden yapƒ±landƒ±r
echo -e "${BLUE}Xray servisini root olarak yapƒ±landƒ±rƒ±lƒ±yor...${NC}"

# Drop-in override dosyalarƒ±nƒ± sil (bunlar servis dosyasƒ±nƒ± override ediyor)
rm -rf /etc/systemd/system/xray.service.d
rm -rf /etc/systemd/system/xray@.service.d

# Servis dosyasƒ±nƒ± tamamen yeniden yaz
cat > /etc/systemd/system/xray.service << 'SERVICEEOF'
[Unit]
Description=Xray Service
Documentation=https://github.com/xtls
After=network.target nss-lookup.target

[Service]
User=root
CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
AmbientCapabilities=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
NoNewPrivileges=true
ExecStart=/usr/local/bin/xray run -config /usr/local/etc/xray/config.json
Restart=on-failure
RestartPreventExitStatus=23
LimitNPROC=10000
LimitNOFILE=1000000

[Install]
WantedBy=multi-user.target
SERVICEEOF

# Eski log dosyalarƒ±nƒ± temizle ve yeniden olu≈ütur
rm -f /var/log/xray/access.log /var/log/xray/error.log
touch /var/log/xray/access.log /var/log/xray/error.log
chmod 644 /var/log/xray/access.log /var/log/xray/error.log

# Log ve config dizinlerine tam izin ver
chmod -R 755 /var/log/xray
chmod -R 755 /etc/xray

# Daemon'ƒ± yeniden y√ºkle
systemctl daemon-reload
echo -e "${GREEN}‚úì Servis dosyasƒ± root kullanƒ±cƒ±sƒ± i√ßin yapƒ±landƒ±rƒ±ldƒ±${NC}"

# Xray servisini etkinle≈ütir ve ba≈ülat
systemctl enable xray
systemctl restart xray

# Servisin ba≈ülamasƒ±nƒ± bekle (retry logic)
echo -e "${BLUE}Xray servisinin ba≈ülamasƒ± bekleniyor...${NC}"
for i in {1..10}; do
    sleep 1
    if systemctl is-active --quiet xray; then
        echo -e "${GREEN}‚úì Xray servisi ba≈üarƒ±yla ba≈ülatƒ±ldƒ±!${NC}"
        break
    fi
    if [ $i -eq 10 ]; then
        echo -e "${RED}Xray ba≈ülatƒ±lamadƒ±!${NC}"
        echo -e "${YELLOW}Son loglar:${NC}"
        journalctl -u xray -n 30 --no-pager
        echo -e "${YELLOW}Servis durumu:${NC}"
        systemctl status xray --no-pager
        rm -f "$UUIDS_FILE"
        exit 1
    fi
done

# Baƒülantƒ± bilgileri dosyasƒ± olu≈ütur
INFO_FILE="/root/xray-bughost-info.txt"

cat > "$INFO_FILE" << INFOEOF
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë        VLESS XTLS-Vision BugHost/SNI Trick           ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

üì° SUNUCU Bƒ∞LGƒ∞LERƒ∞:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
IP Adresi    : ${SERVER_IP}
Port         : ${PORT}
Protocol     : VLESS + XTLS-Vision
Security     : TLS (self-signed)
Kullanƒ±cƒ±    : ${USER_COUNT} adet

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üéØ SNI TRICK NASIL KULLANILIR (XTLS ile):

1. Client uygulamasƒ±nda profili d√ºzenle
2. SNI/Host alanƒ±nƒ± deƒüi≈ütir (varsayƒ±lan: ${SERVER_IP})
3. √ñrnek: www.whatsapp.com, www.instagram.com
4. "allowInsecure" veya "Skip Cert Verify" se√ßeneƒüini A√á
5. Operat√∂r SNI'ye bakƒ±p √ºcretsiz uygulama trafiƒüi sanƒ±r
6. Sen t√ºm interneti kullanƒ±rsƒ±n!

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üí° √ñNERƒ∞LEN √úCRETSƒ∞Z SNI'LER:

WhatsApp     : www.whatsapp.com
Instagram    : www.instagram.com
Facebook     : www.facebook.com
Spotify      : www.spotify.com
Twitter/X    : www.twitter.com
TikTok       : www.tiktok.com
YouTube      : www.youtube.com

‚ö†Ô∏è  Operat√∂r√ºn√ºz√ºn hangi uygulamalarƒ± √ºcretsiz sunduƒüunu 
    √∂ƒürenin ve o domain'i kullanƒ±n!

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üîó CLIENT BAƒûLANTI Lƒ∞NKLERƒ∞:

INFOEOF

USER_NUM=0
while IFS= read -r UUID; do
    if [[ -z "$UUID" ]]; then
        continue
    fi
    
    USER_NUM=$((USER_NUM+1))
    
    # XTLS-Vision with TLS - SNI deƒüi≈ütirilebilir!
    CONNECTION_LINK="vless://${UUID}@${SERVER_IP}:${PORT}?encryption=none&flow=xtls-rprx-vision&security=tls&sni=${SERVER_IP}&alpn=h2,http/1.1&type=tcp&allowInsecure=1#BugHost-User${USER_NUM}"
    
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ" >> "$INFO_FILE"
    echo "Kullanƒ±cƒ± ${USER_NUM}:" >> "$INFO_FILE"
    echo "${CONNECTION_LINK}" >> "$INFO_FILE"
    echo "" >> "$INFO_FILE"
done < "$UUIDS_FILE"

cat >> "$INFO_FILE" << 'INFOEOF2'
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üì± CLIENT UYGULAMALAR:

Android:
  ‚Ä¢ v2rayNG    : https://github.com/2dust/v2rayNG/releases
  ‚Ä¢ Hiddify    : https://github.com/hiddify/hiddify-next/releases

iOS:
  ‚Ä¢ Shadowrocket (App Store - √úcretli)
  ‚Ä¢ Hiddify    : https://github.com/hiddify/hiddify-next/releases

Windows:
  ‚Ä¢ v2rayN     : https://github.com/2dust/v2rayN/releases
  ‚Ä¢ Hiddify    : https://github.com/hiddify/hiddify-next/releases

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚öôÔ∏è  SNI AYARLAMA ADIMLAR (v2rayNG √ñrnek):

1. Baƒülantƒ± linkini kopyala
2. v2rayNG'de + butonuna bas
3. "Import config from clipboard" se√ß
4. Profili d√ºzenle (‚úèÔ∏è ikonu)
5. "Server name / SNI / Host" alanƒ±nƒ± bul
6. √úcretsiz uygulama domain'ini yaz: www.whatsapp.com
7. "Allow insecure" se√ßeneƒüini A√á (üîí bypass i√ßin)
8. Kaydet (‚úì) ve baƒülan!

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üîß Y√ñNETƒ∞M KOMUTLARI:

Durum kontrol     : systemctl status xray
Yeniden ba≈ülat    : systemctl restart xray
Durdur            : systemctl stop xray
Loglarƒ± g√∂r√ºnt√ºle : journalctl -u xray -f
Config test       : xray run -test -c /usr/local/etc/xray/config.json

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ö†Ô∏è  √ñNEMLƒ∞ NOTLAR:

1. Her operat√∂rde √ßalƒ±≈ümayabilir
2. Operat√∂r√ºn√ºz√ºn √ºcretsiz paketini √∂ƒürenin
3. SNI'yi client'ta MUTLAKA ayarlayƒ±n
4. Doƒüru domain kullanƒ±n (www. √∂n ekiyle)
5. Bazƒ± operat√∂rler bu y√∂ntemi engelleyebilir

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Kurulum tarihi: $(date '+%Y-%m-%d %H:%M:%S')
Bilgiler dosyasƒ±: /root/xray-bughost-info.txt

INFOEOF2

# Temp dosyayƒ± temizle
rm -f "$UUIDS_FILE"

echo ""
echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${GREEN}‚ïë          BUGHOST/SNI TRICK KURULUMU TAMAMLANDI!      ‚ïë${NC}"
echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  √ñNEMLƒ∞ HATIRLATMA:${NC}"
echo -e "${BLUE}Client uygulamasƒ±nda SNI/Host alanƒ±na operat√∂r√ºn√ºz√ºn${NC}"
echo -e "${BLUE}√ºcretsiz sunduƒüu uygulamanƒ±n domain'ini girmeyi unutmayƒ±n!${NC}"
echo ""
echo -e "${YELLOW}üìã Pop√ºler SNI √ñrnekleri:${NC}"
echo -e "  ‚Ä¢ ${GREEN}www.whatsapp.com${NC}  (WhatsApp paketi varsa)"
echo -e "  ‚Ä¢ ${GREEN}www.instagram.com${NC} (Instagram paketi varsa)"
echo -e "  ‚Ä¢ ${GREEN}www.spotify.com${NC}   (Spotify paketi varsa)"
echo ""
echo -e "${BLUE}üìÑ T√ºm bilgiler:${NC} ${GREEN}${INFO_FILE}${NC}"
echo ""
echo -e "${GREEN}üîó CLIENT BAƒûLANTI Lƒ∞NKLERƒ∞:${NC}"
echo ""

USER_NUM=0
while IFS= read -r line; do
    if [[ $line == Kullanƒ±cƒ±* ]]; then
        echo -e "${YELLOW}${line}${NC}"
    elif [[ $line == vless://* ]]; then
        echo -e "${GREEN}${line}${NC}"
        echo ""
    fi
done < "$INFO_FILE"

echo -e "${GREEN}üöÄ BugHost/SNI Trick hazƒ±r! ƒ∞yi kullanƒ±mlar!${NC}"
echo -e "${BLUE}üí° ƒ∞pucu: cat ${INFO_FILE} komutuyla bilgileri tekrar g√∂r√ºnt√ºleyebilirsiniz${NC}"
echo ""
